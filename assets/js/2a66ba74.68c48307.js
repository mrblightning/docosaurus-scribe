"use strict";(self.webpackChunkscribe=self.webpackChunkscribe||[]).push([[293],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),f=a,d=m["".concat(l,".").concat(f)]||m[f]||u[f]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2870:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},assets:function(){return p},toc:function(){return u},default:function(){return f}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:6},l="Detecting CVEs",c={unversionedId:"cves",id:"cves",title:"Detecting CVEs",description:"You can list all the Common Vulnerabilities and Exposures (CVEs) relevant to your software artifact as follows:",source:"@site/docs/cves.md",sourceDirName:".",slug:"/cves",permalink:"/docosaurus-scribe/docs/cves",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Sample Project",permalink:"/docosaurus-scribe/docs/sampleproject"},next:{title:"Generating SBOM from CLI",permalink:"/docosaurus-scribe/docs/gensbomcli"}},p={},u=[],m={toc:u};function f(e){var t=e.components,s=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"detecting-cves"},"Detecting CVEs"),(0,o.kt)("p",null,"You can list all the Common Vulnerabilities and Exposures (CVEs) relevant to your software artifact as follows: "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Generate an SBOM with ",(0,o.kt)("inlineCode",{parentName:"p"},"gensbom"),"."),(0,o.kt)("p",{parentName:"li"},"SBOM can be generated automatically as part of your ",(0,o.kt)("a",{parentName:"p",href:"/docosaurus-scribe/docs/ci-integration",title:"integrating Scribe in a pipeline"},"pipeline integrated with Scribe"),", or ",(0,o.kt)("a",{parentName:"p",href:"/docosaurus-scribe/docs/gensbomcli",title:"Manually run gensbom from a CLI"},"manually"),". ")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Use open-source tool ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/anchore/grype",title:"Grype"},"Grype")," on this SBOM. "),(0,o.kt)("p",{parentName:"li"},"   You can run ",(0,o.kt)("strong",{parentName:"p"},"grype")," either offline or online. If you run offline, you need to update the tool frequently and suppress the automatic update.  "),(0,o.kt)("p",{parentName:"li"},"   In a Unix-based Command Line Interface (CLI) run:  "),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"grype sbom:./image-sbom.json\n")),(0,o.kt)("p",{parentName:"li"},"  Where ",(0,o.kt)("inlineCode",{parentName:"p"},"image-sbom.json")," is the name of your SBOM. Note that the SBOM should be saved as a JSON file. "),(0,o.kt)("p",{parentName:"li"},"   Example output when no vulnerabilities are found:\n",(0,o.kt)("img",{loading:"lazy",alt:"Grype alpine no vulnerabilities",src:n(7730).Z,title:"Grype alpine - no vulnerabilities",width:"1801",height:"203"})),(0,o.kt)("p",{parentName:"li"},"   Example output when vulnerabilities are found:\n",(0,o.kt)("img",{loading:"lazy",alt:"Grype couchbase",src:n(7013).Z,title:"Grype couchbase",width:"1825",height:"1053"})))),(0,o.kt)("p",null,"For more details on the CVEs you can export the result as a JSON file:  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"grype sbom:./image-sbom.json -o json\n")))}f.isMDXComponent=!0},7013:function(e,t,n){t.Z=n.p+"assets/images/couchbase_cve-d6b65d685d0f33f0a118c6c08a9dccae.png"},7730:function(e,t,n){t.Z=n.p+"assets/images/grype_alpine-f2e104ce7a11ba73ffbf5fb4a7a4f7e3.png"}}]);