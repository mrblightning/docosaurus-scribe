"use strict";(self.webpackChunkscribe=self.webpackChunkscribe||[]).push([[48],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(t),d=i,b=m["".concat(c,".").concat(d)]||m[d]||p[d]||o;return t?r.createElement(b,a(a({ref:n},u),{},{components:t})):r.createElement(b,a({ref:n},u))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6858:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},assets:function(){return u},toc:function(){return p},default:function(){return d}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],s={sidebar_position:1},c="Jenkins",l={unversionedId:"ci-integration/jenkins",id:"ci-integration/jenkins",title:"Jenkins",description:"Important to note that this is for Jenkins over Kubernetes only.",source:"@site/docs/ci-integration/jenkins.md",sourceDirName:"ci-integration",slug:"/ci-integration/jenkins",permalink:"/docosaurus-scribe/docs/ci-integration/jenkins",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Setup your CI",permalink:"/docosaurus-scribe/docs/ci-integration/"},next:{title:"GitHub Actions",permalink:"/docosaurus-scribe/docs/ci-integration/github-actions"}},u={},p=[{value:"Step 1: Add the credentials to Jenkins\u200b",id:"step-1-add-the-credentials-to-jenkins",level:2},{value:"Step 2: Call Scribe <em>gensbom</em> command from your pipeline\u2019s Jenkins file",id:"step-2-call-scribe-gensbom-command-from-your-pipelines-jenkins-file",level:2}],m={toc:p};function d(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"jenkins"},"Jenkins"),(0,o.kt)("p",null,"Important to note that this is for Jenkins over Kubernetes only."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note:")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The configuration requires ",(0,o.kt)("em",null,(0,o.kt)("b",null,"product_key")),", ",(0,o.kt)("em",null,(0,o.kt)("b",null,"clientid")),", and ",(0,o.kt)("em",null,(0,o.kt)("b",null,"clientsecret"))," credentials obtained from your Scribe hub account at: ",(0,o.kt)("inlineCode",{parentName:"p"},"Home>Products>[$your_product]>Setup")),(0,o.kt)("p",{parentName:"div"},"Or when you add a new product."))),(0,o.kt)("h2",{id:"step-1-add-the-credentials-to-jenkins"},"Step 1: Add the credentials to Jenkins\u200b"),(0,o.kt)("p",null,"Add the credentials according to the Jenkins instructions found ",(0,o.kt)("a",{href:"https://www.jenkins.io/doc/book/using/using-credentials/"},"here"),". "),(0,o.kt)("h2",{id:"step-2-call-scribe-gensbom-command-from-your-pipelines-jenkins-file"},"Step 2: Call Scribe ",(0,o.kt)("em",{parentName:"h2"},"gensbom")," command from your pipeline\u2019s Jenkins file"),(0,o.kt)("p",null,"The following example pipeline builds project mongo express and calls Scribe ",(0,o.kt)("em",{parentName:"p"},"gensbom")," twice: after checkout and after the docker image is built.  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"pipeline {\n    agent {\n        kubernetes {\n            metadata:\n              labels:\n                some-label: jsl-scribe-test\n            spec:\n              containers:\n              - name: jnlp\n                env:\n                - name: CONTAINER_ENV_VAR\n                  value: jnlp\n              - name: gensbom\n                // taking the image from scribesecuriy means you don't need to have a local version\n                image: scribesecuriy.jfrog.io/scribe-docker-public-local/gensbom:latest \n                command:\n                - cat\n                tty: true\n                command:\n                - cat\n                tty: true\n              - name: git\n                image: alpine/git\n                command:\n                  - cat\n                tty: true\n        }\n    }\n    stages {\n        stage('checkout-bom') {\n            steps {\n                container('git') {\n                    // this is an example of the repository this pipeline is running on. replace with your own repository\n                    sh 'git clone -b v1.0.0-alpha.4 --single-branch https://github.com/mongo-express/mongo-express.git mongo-express-scm'\n                }\n                // The following call to gensbom collects hash value evidence of the source code files to facilitate the integrity validation\n                container('gensbom') {\n                    withCredentials([usernamePassword(credentialsId: 'scribe-staging-auth-id', usernameVariable: 'SCRIBE_CLIENT_ID', passwordVariable: 'SCRIBE_CLIENT_SECRET', productkeyVariable: 'SCRIBE_PRODUCT_KEY')]) {\n                        sh '''\n                        gensbom bom dir:mongo-express-scm \\\n                            --context-type jenkins \\\n                            --output-directory ./scribe/gensbom \\ \n                            -E -U $SCRIBE_CLIENT_ID -P $SCRIBE_CLIENT_SECRET \\\n                            --name $SCRIBE_PRODUCT_KEY \\\n                            --scribe.loginurl=https://scribesecurity-beta.us.auth0.com --scribe.auth0.audience=api.beta.scribesecurity.com \\\n                            --scribe.url https://api.beta.scribesecurity.com \\\n                            -v '''\n                    }\n                }\n            }\n        }\n\n        stage('image-bom') {\n            steps {\n                // The following call to gensbom generates an SBOM from the docker image\n                container('gensbom') {\n                    withCredentials([usernamePassword(credentialsId: 'scribe-staging-auth-id', usernameVariable: 'SCRIBE_CLIENT_ID', passwordVariable: 'SCRIBE_CLIENT_SECRET', productkeyVariable: 'SCRIBE_PRODUCT_KEY')]) {\n                        sh '''\n                        gensbom bom mongo-express:1.0 .0-alpha.4 \\\n                            --context-type jenkins \\\n                            --output-directory ./scribe/gensbom \\ \n                            -E -U $SCRIBE_CLIENT_ID -P $SCRIBE_CLIENT_SECRET \\\n                            --name $SCRIBE_PRODUCT_KEY \\\n                            --scribe.loginurl=https://scribesecurity-beta.us.auth0.com --scribe.auth0.audience=api.beta.scribesecurity.com \\\n                            --scribe.url https://api.beta.scribesecurity.com \\\n                            -v '''\n                    }\n                }\n            }\n        }\n    }\n}\n")))}d.isMDXComponent=!0}}]);